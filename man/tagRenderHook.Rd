% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tags.R
\name{tagRenderHook}
\alias{tagRenderHook}
\title{Add a tag render function}
\usage{
tagRenderHook(tag, func, add = TRUE)
}
\arguments{
\item{tag}{A \code{\link[=tag]{tag()}} object.}

\item{func}{Function with at least one argument (the \code{tag}).}

\item{add}{If \code{TRUE}, the previous render function is called before calling
this \code{func}. Otherwise, any previous render function is ignored.}
}
\value{
A \code{\link[=tag]{tag()}} object with a \code{.renderHook} field containing \code{func}.
When the returned tag is \emph{rendered} (such as with \code{\link[=as.tags]{as.tags()}}),
this function will be called.
}
\description{
Adds a render method to a tag object. This allows for the tag structure to
be physically present while still allowing for a function to enhance (or
even completely replace) the original tag object.
}
\details{
It is recommended to use a render function over a \code{\link[=tagFunction]{tagFunction()}} whenever
possible. By using a render method, a the tag structure is not a black box
and can be inspected and altered before print time.

Using \code{\link[=tagFunction]{tagFunction()}} is recommended if a stand-in tag structure does not
make sense.
}
\examples{
# Have a place holder div and return a span instead
obj <- div("example", .renderHook = function(x) {
  x$name <- "span"
  x
})
obj$name # "div"
print(obj) # Prints as a `span`

# Add a class to the tag
# Should print a `span` with class `"extra"`
spanExtra <- tagRenderHook(obj, function(x) {
  tagAppendAttributes(x, class = "extra")
})
spanExtra

# Replace the previous render method
# Should print a `div` with class `"extra"`
divExtra <- tagRenderHook(obj, replace = TRUE, function(x) {
  tagAppendAttributes(x, class = "extra")
})
divExtra

# Add more child tags
spanExtended <- tagRenderHook(obj, function(x) {
  tagAppendChildren(x, " ", tags$strong("bold text"))
})
spanExtended

# Add a new html dependency
newDep <- tagRenderHook(obj, function(x) {
  fa <- htmlDependency(
    "font-awesome", "4.5.0", c(href="shared/font-awesome"),
    stylesheet = "css/font-awesome.min.css")
  attachDependencies(x, fa, append = TRUE)
})
# Also add a jqueryui html dependency
htmlDependencies(newDep) <- htmlDependency(
  "jqueryui", "1.11.4", c(href="shared/jqueryui"),
  script = "jquery-ui.min.js")
# At render time, both dependencies will be found
renderTags(newDep)$dependencies

# Ignore the original tag and return something completely new.
newObj <- tagRenderHook(obj, function(x) {
  tags$p("Something else")
})
newObj
}
\seealso{
\code{\link{tagFunction}}
}
